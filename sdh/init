/*

 #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
 This file is part of the Smart Developer Hub Project:
 http://www.smartdeveloperhub.org/
 Center for Open Middleware
 http://www.centeropenmiddleware.com/
 #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
 Copyright (C) 2015 Center for Open Middleware.
 #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
 */

'use strict';

// SDH platform
GLOBAL.sdhWrapper = require('./sdhWrapper');

var theCallback;

var staticDataCallback = function staticDataCallback() {
    console.log("        * " + users.length + " Users");
    console.log("        * " + repositories.length + " Repositories");
    // End
    theCallback();
};

var tdbCallback = function tdbCallback() {
    // Get static Information. Users, repositories, organization...
    console.log("        * " + tbds.tbds.length + " TBDs");
    console.log("    #Getting basic information about Users, Repositories and Organization...");
    try {
        var staticObject = require('./staticObject');
        staticObject.preloadAll(staticDataCallback);
    } catch (err) {
        console.log("error getting Users and Reposiories");
    }
};

var metricCallback = function metricCallback() {
    // Get Tbds
    console.log("        * " + metrics.metrics.length + " metrics");
    console.log("    #Getting available Time Based Data from Agora-Platform...");
    try {
        sdhWrapper.setAvailableTbds(tdbCallback);
    } catch (err) {
        console.log("error getting TBDs");
    }
};

var getInfo = function getInfo() {
    // Get Metrics, tbds, staic info... cascade
    console.log("    #Getting available metrics from Agora-Platform...");
    try {
        sdhWrapper.setAvailableMetrics(metricCallback);
    } catch (err) {
        console.log("error getting metrics");
    }
}

exports.update = function update(callback) {
    theCallback = callback;
    getInfo();
};
